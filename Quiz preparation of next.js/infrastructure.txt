1. What is Infrastructure as Code (IaC)?
A) A way to manage infrastructure manually
B) A way to manage infrastructure using code and configuration files
C) A way to build houses
D) A way to write blueprints
Answer: B) A way to manage infrastructure using code and configuration files
2. What is the benefit of using Infrastructure as Code (IaC)?
A) It makes infrastructure management more manual
B) It makes infrastructure management more predictable and cost-effective
C) It makes infrastructure management more risky
D) It makes infrastructure management more complex
Answer: B) It makes infrastructure management more predictable and cost-effective
3. What is Framework-Defined Infrastructure (FdI)?
A) A way to manage infrastructure manually
B) A way to generate IaC configuration automatically from code
C) A way to build houses
D) A way to write blueprints
Answer: B) A way to generate IaC configuration automatically from code


6. What is the benefit of using frameworks in application development?
A) They make development more complex
B) They provide structure and abstraction to applications
C) They are hard to learn
D) They are only used for small applications
Answer: B) They provide structure and abstraction to applications
7. What is the role of the framework in Framework-Defined Infrastructure (FdI)?
A) To manually set up infrastructure
B) To write code that describes the desired infrastructure
C) To automatically create infrastructure based on the application code
D) To manage the application's logic
Answer: C) To automatically create infrastructure based on the application code
8. What is the result of using Framework-Defined Infrastructure (FdI)?
A) More time spent on system management
B) Less time spent on system management
C) More manual effort required
D) Less scalability
Answer: B) Less time spent on system management
9. What is the advantage of FdI over IaC?
A) FdI requires more manual effort
B) FdI is less scalable
C) FdI abstracts over cloud primitives
D) FdI is only used for small applications
Answer: C) FdI abstracts over cloud primitives
10. What is the concept that allows FdI to automatically create infrastructure?
A) Inversion of control
B) Hollywood principle
C) Framework-defined infrastructure
D) Infrastructure as code
Answer: A) Inversion of control

previous ones. Here are a few:
7. What is the advantage of using a framework like Next.js with FdI?
A) It allows for manual infrastructure setup
B) It provides a flexible way to manage application logic
C) It enables automatic infrastructure setup and scaling
D) It only works with small applications
Answer: C) It enables automatic infrastructure setup and scaling
8. How does FdI benefit the development process?
A) It adds extra complexity to the development process
B) It requires manual infrastructure setup
C) It allows developers to focus on writing code
D) It only works with certain frameworks
Answer: C) It allows developers to focus on writing code
9. What is the role of the gateway service in FdI?
A) To provision infrastructure
B) To manage application logic
C) To route requests to the appropriate infrastructure
D) To manage the database
Answer: C) To route requests to the appropriate infrastructure
10. How does FdI handle changes to the application code?
A) It requires manual infrastructure updates
B) It automatically updates the infrastructure
C) It only works with certain types of code changes
D) It ignores code changes
Answer: B) It automatically updates the infrastructure

12. How does FdI handle routing in a Next.js application?
A) It requires manual routing configuration
B) It automatically generates a routing table
C) It only works with certain routes
D) It ignores routing
Answer: B) It automatically generates a routing table
14. How does FdI benefit the scalability of an application?
A) It limits scalability
B) It enables automatic scaling
C) It requires manual scaling
D) It only works with small applications
Answer: B) It enables automatic scaling
15. What is the advantage of using FdI with a cloud platform like Vercel?
A) It requires more manual effort
B) It provides faster deployment and automatic scaling
C) It only works with small applications
D) It ignores cloud platform features
Answer: B) It provides faster deployment and automatic scaling

3. What is the concept of Deferred Static Generation in Gatsby?
A) Rendering pages on every view
B) Generating static pages at build time
C) Deploying a serverless function to perform deferred generation
D) Not rendering pages
Answer: C) Deploying a serverless function to perform deferred generation
4. What happens when using form actions in SvelteKit?
A) A serverless function is automatically created
B) A server is automatically created
C) The form is not submitted
D) The form is submitted to a server
Answer: A) A serverless function is automatically created
5. What is the purpose of middleware in Next.js?
A) To render pages on every view
B) To generate static pages at build time
C) To trigger the provisioning of edge computing resources
D) To not render pages
Answer: C) To trigger the provisioning of edge computing resources

1. What problem does serverless architecture pose for local development?
A) It makes local development easier
B) It makes production infrastructure management easier
C) It makes local development harder due to complex and proprietary systems
D) It eliminates the need for local development
Answer: C) It makes local development harder due to complex and proprietary systems
2. What solution does framework-defined infrastructure provide for local development?
A) It allows developers to create a local simulation of the complex serverless stack
B) It eliminates the need for local development
C) It uses the same framework tooling for local development as for production behavior
D) It makes local development harder
Answer: C) It uses the same framework tooling for local development as for production behavior
3. What are immutable deployments?
A) Deployments that can be changed and updated
B) Deployments that are never changed and are immutable
C) Deployments that are only used for production
D) Deployments that are only used for local development
Answer: B) Deployments that are never changed and are immutable
4. How do immutable deployments work in a serverless world?
A) They use up physical resources and become unavailable when unused
B) They scale to zero and do not use physical resources when unused
C) They are only used for production deployments
D) They are only used for local development deployments
Answer: B) They scale to zero and do not use physical resources when unused
5. What technologies do framework-defined infrastructure and immutable deployments rely on?
A) Infrastructure as Code (IaC) and Kubernetes
B) Serverless architecture and proprietary systems
C) Platform as a Service (PaaS) and Git
D) All of the above
Answer: A) Infrastructure as Code (IaC) and Kubernetes
Framework-defined infrastructure abstracts over cloud primitives such as servers, message queues, and serverless functions, making them mere implementation details of the frameworks' concepts.

 1.True

2. False
Next.js which is built on the concepts of Framework-defined infrastructure supports the following:

(Select one or more)

1. Providing portability between different target infrastructure providers

2. Increases the need to manually configure infrastructure to run an application in production

3. Increasing the time spent writing product code over system management

4. Allowing the unchanged use of the framework's native local development tools

5. Standardizing on pre-reviewed secure services
/While the word framework is hard to define, the Hollywood principle," writes code within the hooks provided by it. "probably captures the meaning, where the framework manages the high-level application flow while the developer

O1. I love you, but don't call me

O2 Don't call us, we call you

3. We will call you tonight

4. Call us anytime, but we will call you
Framework-defined infrastructure takes advantage of both the___ and the predictable structure of framework-based applications to automatically map framework concepts onto the appropriate infrastructure without the need for explicit declaration or configuration of the infrastructure.

1. Factory Method

2. Abstract Factory

3. Inversion of Control

 4, Middleware
Inversion of Control (IoC) is a design principle that promotes the inversion of the flow of control in a software application, Instead of a component or class controlling the flow of execution, control is inverted, and the framework or container manages the flow and invokes the appropriate components.

1. True

2. False
In Next.js, Vercel is implementing framework-defined infrastructure for more predictable, lower cost, and lower risk DevOps through truly serverless--and, for developers, infrastructureless--architecture.

1. True

 2. False